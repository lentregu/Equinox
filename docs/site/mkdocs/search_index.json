{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Human Authorization\n\n\nThis project aims to build your own low cost authorization tool by means of the face detection.\n\n\nYou can find here \ngithub project\n the code (result of a Hackaton).\n\n\n\n\nThe picture above shows the architecture employed to implement our \nHuman Authorization\n low cost tool.\n\n\n\n\nMovement Sensor\n\n\nArduino\n\n\nRaspberry Pi\n\n\nRaspicam\n\n\nMicrosoft Oxfor Project API\n\n\nScreen\n\n\n\n\nArduino\n\n\nThis component is in charge to detect presence and communicate it to the Raspberry Server in order to be authorized.\n\n\nMovement Sensor\n\n\nIt is connected to the arduino, this sensor detects movement (human presence) and sends a digital signal to an Arudino's digital input PIN.\n\n\nMovement Manager\n\n\nThis is a little program that is listening the input PIN (0|1) where the movement sensor writes, and resend it to the Raspberry Pi through the serial port where will be captured by the PhotoManager.\n\n\nRaspberry Pi\n\n\nThis component acts as the server for the Human Authorization \n\n\nPhotoManager\n\n\nThis program is listening in the serial port and when detects a 1, it asks the Raspicam to take a photo and store it in a file. Furthermore, it sends a request to the Human Authorization server to authorize the person whose photo is stored in the file provided in the request (query parameter).\n\n\nHuman Authorization\n\n\nThis component is a server that exposes an API to authorize a person if him/her belongs to a list o authorized people that is stored in the Azure Cloud. The API receives a photo of the person to be authenticated and it makes a request to faceAPI of Microsoft that will return a list of possible person in the list with a percentage of matching with the person to be authenticated.\n\n\nThe Human Authorization server applies an algorithm to determine if the user is one of them and if so it writes \"AUTHORIZED\" in the screen otherwise it writes \"UNAUTHORIZED\" at the same time it can send an SMS to a configured number with the authorization result.\n\n\nProvision Tool\n\n\nThis tool is a CLI tool that allows us to creat a list of authorised people, to add a person to a list of people, to list all the exixting \"people list\" and to list all the people in a specific list.\n\n\nRaspicam\n\n\nCamera connected to the Raspberry Pi to take photos to the people to be authorised.\n\n\nMicrosoft Oxford Project\n\n\nMicrosoft IA server that offers API to detect faces, create list of faces, find similar faces, etc.\n\n\nScreen\n\n\nDevice used to write the result of the authorization.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-human-authorization", 
            "text": "This project aims to build your own low cost authorization tool by means of the face detection.  You can find here  github project  the code (result of a Hackaton).   The picture above shows the architecture employed to implement our  Human Authorization  low cost tool.   Movement Sensor  Arduino  Raspberry Pi  Raspicam  Microsoft Oxfor Project API  Screen", 
            "title": "Welcome to Human Authorization"
        }, 
        {
            "location": "/#arduino", 
            "text": "This component is in charge to detect presence and communicate it to the Raspberry Server in order to be authorized.", 
            "title": "Arduino"
        }, 
        {
            "location": "/#movement-sensor", 
            "text": "It is connected to the arduino, this sensor detects movement (human presence) and sends a digital signal to an Arudino's digital input PIN.", 
            "title": "Movement Sensor"
        }, 
        {
            "location": "/#movement-manager", 
            "text": "This is a little program that is listening the input PIN (0|1) where the movement sensor writes, and resend it to the Raspberry Pi through the serial port where will be captured by the PhotoManager.", 
            "title": "Movement Manager"
        }, 
        {
            "location": "/#raspberry-pi", 
            "text": "This component acts as the server for the Human Authorization", 
            "title": "Raspberry Pi"
        }, 
        {
            "location": "/#photomanager", 
            "text": "This program is listening in the serial port and when detects a 1, it asks the Raspicam to take a photo and store it in a file. Furthermore, it sends a request to the Human Authorization server to authorize the person whose photo is stored in the file provided in the request (query parameter).", 
            "title": "PhotoManager"
        }, 
        {
            "location": "/#human-authorization", 
            "text": "This component is a server that exposes an API to authorize a person if him/her belongs to a list o authorized people that is stored in the Azure Cloud. The API receives a photo of the person to be authenticated and it makes a request to faceAPI of Microsoft that will return a list of possible person in the list with a percentage of matching with the person to be authenticated.  The Human Authorization server applies an algorithm to determine if the user is one of them and if so it writes \"AUTHORIZED\" in the screen otherwise it writes \"UNAUTHORIZED\" at the same time it can send an SMS to a configured number with the authorization result.", 
            "title": "Human Authorization"
        }, 
        {
            "location": "/#provision-tool", 
            "text": "This tool is a CLI tool that allows us to creat a list of authorised people, to add a person to a list of people, to list all the exixting \"people list\" and to list all the people in a specific list.", 
            "title": "Provision Tool"
        }, 
        {
            "location": "/#raspicam", 
            "text": "Camera connected to the Raspberry Pi to take photos to the people to be authorised.", 
            "title": "Raspicam"
        }, 
        {
            "location": "/#microsoft-oxford-project", 
            "text": "Microsoft IA server that offers API to detect faces, create list of faces, find similar faces, etc.", 
            "title": "Microsoft Oxford Project"
        }, 
        {
            "location": "/#screen", 
            "text": "Device used to write the result of the authorization.", 
            "title": "Screen"
        }
    ]
}